###################################################################################
# Note: For the sake of brevity, file_filter is abbreviated as ff in
# comments in this file.
###################################################################################


###################################################################################
# OVERVIEW
###################################################################################
# This file is a template explaining the legal fields that can be included in a
# ff config file. When calling the ff tool, multiple such config files may be
# specified as arguments. Each one is parsed in turn. If the same field is
# specified in multiple such files, only the value from the last file will be used
# by the ff tool. In this way it is possible to pass a default config file as the
# first argument, and then (for example) a repo-specific config file that inherits
# the default fields which make sense, while also overriding default fields and/or
# adding additional fields as appropriate.
#
# The ff tool reads path+filenames from standard input, deciding for each one 
# whether to skip it or whether to print its path+filename to standard output. In
# other words, it applies a filter to the list of files. You can think of it as a
# very elaborate grep.
#
# When the tool executes, it does the following:
# 1) Reads in all of the config files specified on the command line, as described
#    earlier in the overview, building up the final set of values it will be using.
# 2) Then it considers each path+filename it reads via standard input:
#    a) If the file under consideration does not match any of the include fields,
#       then it will be skipped.
#    b) If the file matches any of the exclude fields, then it will be skipped.
#    c) Otherwise, it will be printed to standard output.
###################################################################################


###################################################################################
# Notes
###################################################################################
# The ff tool assumes that all input files+paths are relative pathnames from the
# current directory. Further, it is not intended to work with paths which begin
# with ./ or ../
###################################################################################
# If you wish to ignore a field from a config file being passed into the tool
# earlier, then in a later config file you can specify the field as an empty list.
# The empty list will take precedence over the previously-defined value.
###################################################################################
# Some of the fields in this file are lists of string patterns. These patterns
# are Python 3 regular expressions. There is no need to specify a ^ at the
# beginning of a pattern or a $ at the end of the pattern -- they will be added
# if you omit them
###################################################################################
# For non-pattern types, they are converted into patterns using the ff parser.
# This conversion assumes that the original string does not include any characters
# with special meanings for regular expressions. If you wish to specify an
# extension, file, or directory that includes such characters, it should instead
# be specified using one of the pattern fields.
#
# For example, the following should not be listed as an extension:
# "1+"
###################################################################################

###################################################################################
# INCLUDES
###################################################################################
# The include and also_include fields are the first pass of the ff filter process.
# A file has to be caught by at least one of these in order to make it through the
# filtering. In the description for these you will see them say that "If the
# file meets this crtieria, it will be included." This just means that the file 
# will make it past the include check -- it may yet be excluded by one of the
# exclude criteria.
###################################################################################


###################################################################################
# include_extensions
#
# Any file with one of these extensions will be included.
###################################################################################
include_extensions:
    - "a"
    - "b"


###################################################################################
# include_files
#
# Any file with this name in the root directory of the repo will be included
###################################################################################
include_files:
    - "file1"
    - "file2"


###################################################################################
# include_subfiles
#
# Any file with this name, regardless of where it is located in the repo, will be
# included.
###################################################################################
include_subfiles:
    - "subfile1"
    = "subfile2"


###################################################################################
# include_directories
#
# For any listed directory, all of its contents (including inside its 
# subdirectories) will be included. The listed directory names are interpreted from
# the root of the repo. 
#
# Examples:
# include_directories       actual directory    match?
# scripts                   scripts             yes
# scripts                   test/scripts        no
# test/scripts              test/scripts        yes
###################################################################################
include_directories:
    - "a/b/c"
    - "d"


###################################################################################
# include_subdirectories
#
# Same as include_directories, except that the listed directories can be at any
# location in the repo, not just at the root. 
#
# Examples:
# include_subdirectories    repo directory      match?
# scripts                   scripts             yes
# scripts                   test/scripts        yes
# test/scripts              test/scripts        yes
# test/scripts              my/test/scripts     yes
###################################################################################
inside_subdirectories:
    - "e/f"
    - "g"


###################################################################################
# include_filename_patterns
#
# If a file in the target repo has a name matching one of these patterns, it will
# be included. 
#
# Notes:
# * This matches names of files and does not care about their path within the repo.
# * If this pattern matches the name of a directory, it has no effect. Only files
#   which match the pattern are included.
###################################################################################
include_filename_patterns:
    - "fileprefix.*"
    - "start_.*_end"


###################################################################################
# include_dirname_patterns
#
# Same as include_filename_patterns, except it only cares if the pattern matches
# the name of a directory, not a file. If it does, ALL contents of that directory
# (including inside its subdirectories) will be included.
###################################################################################
include_dirname_patterns:
    - "directory[1-3]"


###################################################################################
# include_filepath_patterns
#
# This is the same as include_filename_patterns except the pattern is compared to
# the full path and filename of the file inside the repo. If it matches, that file
# is included.
#
# Note: 
# If a pattern matches a directory, it has no effect. Only files which match a
# pattern are included
###################################################################################
include_filepath_patterns:
    - "(|.*/)ansible/.*[.](yml|yaml)"


###################################################################################
# include_dirpath_patterns
#
# Same as include_filepath_patterns, except it only cares if the pattern matches
# a directory, not a file. If it does, ALL contents of that directory (including
# inside its subdirectories) will be included.
###################################################################################
include_dirpath_patterns:
    - "dog/.*/fish[1-5]"


###################################################################################
# also_include_*
#
# If you specify the same include_ field in multiple ff config files, the later
# field values will override the earlier ones. The expected use case of the ff
# tool is that you will specify a default config file and a repo-specific config
# file. If you wish your repo config file to add to any of the above include values,
# rather than override them, then you can specify also_include fields in your
# repo ff config file. For every previously-defined include_ field, there is a
# corresponding also_include_ field. For example, "also_include_files", 
# "also_include_filepath_patterns", etc. Their formats are identical.
###################################################################################


###################################################################################
# EXCLUDES
###################################################################################
# The list of input files has been filtered through the include pass first,
# skipping any files which do not match any of the include crtieria. Next it is on
# to the exclude crtieria, to determine which of the surviving files should be
# skipped. For every include field, there is a corresponding exclude field, which
# has the same format. 
###################################################################################

exclude_extensions: []

exclude_files: []

exclude_subfiles: []

exclude_directories: []

exclude_subdirectories: []

exclude_filename_patterns: []

exclude_dirname_patterns: []

exclude_filepath_patterns: []

exclude_dirpath_patterns: []

###################################################################################
# also_exclude_*
#
# As with include, also_exclude fields exist for every exclude field.
###################################################################################
