/*
 *
 *  MIT License
 *
 *  (C) Copyright 2021-2022 Hewlett Packard Enterprise Development LP
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a
 *  copy of this software and associated documentation files (the "Software"),
 *  to deal in the Software without restriction, including without limitation
 *  the rights to use, copy, modify, merge, publish, distribute, sublicense,
 *  and/or sell copies of the Software, and to permit persons to whom the
 *  Software is furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included
 *  in all copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 *  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 *  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 *  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *  OTHER DEALINGS IN THE SOFTWARE.
 *
 */

@Library('cms-meta-tools') _
@Library('csm-shared-library') __

void isStable() {
    echo "Git branch is ${env.GIT_BRANCH}"
    if ( env.GIT_BRANCH == "release/stable" ){
        return true
    } else {
        return getBuildIsStable(tagIsStable: false)
    }
}

pipeline {
    agent {
        label "metal-gcp-builder"
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: "10"))
        timestamps()
    }

    environment {
        DESCRIPTION = "Helm charts for product installation on CSM systems."
        IS_STABLE = isStable()

        IMPORT_CONFIG_CHART_NAME = "cray-import-config"
        IMPORT_CONFIG_CHART_VERSION = getChartVersion(chartDirectory: 'charts', name: env.IMPORT_CONFIG_CHART_NAME, isStable: env.IS_STABLE)
    }

    stages {
        stage("Clone cms_meta_tools repo") {
            steps {
                // This function is defined in cms-meta-tools:vars/cloneCMSMetaTools.groovy
                cloneCMSMetaTools()
            }
        }

        stage("runBuildPrep") {
            steps {
                sh "make runbuildprep"
            }
        }

        stage("Lint") {
            steps {
                sh "make lint"
            }
        }

        stage("Prepare") {
            steps {
                sh "make chart_setup"
            }
        }

        stage("Test") {
            steps {
                sh "make import_config_test"
            }
        }

        stage("Package") {
            steps {
                sh "make import_config_package"
            }
        }

        stage("Publish") {
            steps {
                publishCsmHelmCharts(component: env.IMPORT_CONFIG_CHART_NAME, chartsPattern: "${env.IMPORT_CONFIG_CHART_NAME}*.tgz", chartsPath: "${WORKSPACE}/charts/.packaged", isStable: env.IS_STABLE)
            }
        }
    }
}